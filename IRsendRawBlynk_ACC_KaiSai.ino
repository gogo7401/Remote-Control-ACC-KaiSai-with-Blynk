// #define ... 
#define BLYNK_PRINT Serial
#define IR_LED 4  // ESP8266 GPIO pin to use. Recommended: 4 (D2).


// #include ...
#ifndef UNIT_TEST
#include <Arduino.h>
#endif
#include <IRremoteESP8266.h>
#include <IRsend.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

// Your WiFi credentials.
// Set password to "" for open networks.
const char* ssid = "your WiFi SSID";
const char* password ="your password";

// You should get Auth Token in the Blynk App.
// Go to the Project Settings (nut icon).
char auth[] = "your authentication token"; // My Local Server BLYNK - ACC KaiSai Office

IPAddress ip(192, 168, 2, xx); // where xx is the desired IP Address
IPAddress gateway(192, 168, 2, xx); // set gateway to match your network
IPAddress dns(8, 8, 8, 8);
IPAddress subnet(255, 255, 255, 0); // set subnet mask to match your network


IPAddress server_ip (xxx, xxx, xxx, xxx); // IP address on your public Server 

IRsend irsend(IR_LED);  // Set the GPIO to be used to sending the message.

// Example of data captured by IRrecvDumpV2.ino
uint16_t rawDataOn[199] = {4398, 4420,  538, 1614,  516, 536,  562, 1614,  538, 1614,  514, 562,  536, 514,  560, 1616,  536, 514,  562, 538,  538, 1588,  540, 560,  536, 514,  562, 1616,  536, 1598,  556, 536,  540, 1588,  542, 1634,  538, 512,  560, 1616,  538, 1590,  562, 1588,  564, 1588,  562, 1616,  516, 1636,  536, 514,  562, 1614,  520, 528,  540, 562,  536, 512,  562, 540,  536, 512,  562, 514,  562, 1612,  516, 1636,  536, 514,  540, 534,  538, 560,  540, 536,  536, 514,  560, 514,  560, 538,  516, 558,  540, 1614,  514, 1636,  514, 1612,  542, 1634,  514, 1612,  540, 1638,  512, 5234,  4394, 4422,  516, 1630,  520, 538,  538, 1636,  538, 1590,  540, 562,  514, 560,  516, 1620,  540, 550,  536, 516,  540, 1610,  538, 538,  540, 558,  538, 1616,  512, 1636,  540, 514,  562, 1612,  536, 1616,  536, 514,  540, 1634,  536, 1616,  536, 1612,  518, 1636,  536, 1614,  514, 1614,  540, 558,  536, 1614,  538, 514,  540, 536,  542, 556,  538, 514,  540, 562,  538, 538,  536, 1616,  514, 1636,  516, 562,  514, 558,  518, 534,  542, 560,  514, 560,  512, 560,  516, 536,  540, 562,  514, 1640,  512, 1636,  540, 1604,  524, 1640,  514, 1640,  514, 1636,  536};  // COOLIX B2BFC0
uint16_t rawDataOff[199] = {4394, 4424,  536, 1614,  514, 560,  516, 1638,  512, 1612,  540, 560,  512, 560,  516, 1636,  516, 562,  512, 562,  514, 1636,  512, 560,  514, 560,  518, 1634,  514, 1638,  514, 560,  514, 1640,  536, 538,  514, 1636,  516, 1638,  512, 1612,  540, 1636,  512, 564,  514, 1636,  534, 1618,  512, 1612,  538, 560,  518, 560,  512, 562,  514, 560,  514, 1638,  514, 560,  514, 562,  514, 1636,  514, 1638,  512, 1638,  514, 536,  540, 542,  552, 542,  512, 538,  540, 558,  516, 562,  512, 562,  514, 562,  512, 1638,  514, 1634,  516, 1610,  540, 1638,  512, 1636,  514, 5232,  4394, 4422,  514, 1638,  512, 562,  514, 1636,  512, 1614,  538, 564,  512, 562,  512, 1636,  514, 538,  538, 560,  514, 1636,  516, 560,  514, 562,  514, 1636,  514, 1640,  512, 562,  512, 1636,  516, 536,  540, 1638,  512, 1638,  514, 1640,  512, 1638,  514, 560,  514, 1640,  510, 1636,  516, 1636,  514, 564,  510, 564,  512, 562,  512, 562,  512, 1638,  514, 560,  514, 562,  514, 1638,  512, 1614,  538, 1640,  512, 562,  514, 536,  538, 566,  512, 560,  514, 560,  516, 536,  538, 562,  514, 560,  514, 1638,  512, 1638,  516, 1636,  514, 1638,  512, 1640,  512};  // COOLIX B27BE0 
uint16_t rawData21[199] = {4424, 4394,  566, 1586,  564, 512,  566, 1608,  540, 1612,  540, 534,  544, 508,  564, 1586,  564, 512,  564, 510,  566, 1608,  540, 512,  566, 510,  564, 1588,  564, 1586,  564, 536,  542, 1586,  564, 1588,  562, 512,  566, 1586,  564, 1588,  564, 1588,  564, 1588,  564, 1608,  544, 1586,  564, 512,  564, 1586,  564, 510,  566, 508,  564, 510,  564, 512,  564, 510,  564, 522,  552, 512,  566, 1608,  544, 1586,  564, 512,  564, 532,  540, 534,  542, 512,  564, 510,  562, 1588,  564, 510,  564, 512,  564, 1610,  540, 1588,  562, 1590,  566, 1608,  542, 1586,  566, 5180,  4426, 4398,  558, 1586,  564, 512,  564, 1586,  562, 1588,  564, 536,  542, 510,  566, 1586,  564, 510,  564, 512,  564, 1586,  564, 512,  564, 510,  564, 1588,  564, 1586,  564, 512,  564, 1586,  564, 1586,  564, 532,  544, 1586,  564, 1610,  540, 1586,  564, 1586,  564, 1590,  566, 1586,  566, 532,  542, 1608,  540, 536,  544, 510,  562, 536,  540, 512,  566, 510,  564, 512,  566, 508,  564, 1586,  562, 1588,  564, 512,  564, 534,  542, 510,  562, 512,  566, 510,  564, 1586,  564, 512,  564, 534,  540, 1588,  564, 1610,  540, 1610,  540, 1588,  564, 1588,  564};  // COOLIX B2BF60
uint16_t rawData22[199] = {4424, 4394,  564, 1588,  564, 534,  540, 1588,  562, 1588,  566, 510,  564, 532,  542, 1610,  542, 510,  560, 538,  538, 1614,  540, 512,  566, 510,  564, 1586,  566, 1586,  566, 510,  566, 1586,  566, 1608,  542, 512,  564, 1610,  540, 1588,  564, 1610,  540, 1612,  542, 1586,  564, 1588,  566, 510,  564, 1588,  564, 534,  538, 536,  540, 536,  540, 512,  564, 512,  562, 536,  542, 510,  562, 1588,  562, 1612,  540, 1588,  564, 512,  564, 536,  538, 512,  564, 512,  564, 1592,  558, 536,  540, 512,  562, 538,  538, 1588,  566, 1584,  564, 1612,  540, 1586,  566, 5182,  4426, 4392,  566, 1588,  564, 512,  564, 1610,  542, 1610,  540, 512,  562, 512,  564, 1586,  562, 514,  564, 510,  564, 1610,  542, 534,  542, 510,  564, 1610,  542, 1586,  566, 534,  538, 1588,  564, 1586,  564, 536,  540, 1612,  540, 1588,  562, 1588,  564, 1586,  564, 1588,  562, 1588,  564, 512,  564, 1588,  564, 536,  538, 512,  564, 536,  536, 514,  562, 536,  542, 536,  540, 534,  540, 1612,  540, 1588,  564, 1586,  566, 510,  562, 536,  542, 534,  542, 512,  562, 1588,  562, 514,  562, 534,  540, 512,  562, 1612,  540, 1588,  566, 1586,  562, 1612,  538};  // COOLIX B2BF70
uint16_t rawData23[199] = {4426, 4394,  564, 1592,  562, 512,  562, 1590,  562, 1588,  564, 512,  564, 512,  562, 1590,  562, 514,  560, 514,  562, 1588,  562, 514,  560, 514,  560, 1590,  562, 1590,  560, 516,  562, 1586,  564, 1588,  560, 516,  558, 1592,  560, 1590,  564, 1588,  560, 1590,  562, 1590,  560, 1590,  562, 514,  564, 1586,  562, 514,  560, 514,  562, 512,  562, 546,  528, 548,  526, 514,  562, 512,  564, 1586,  562, 514,  560, 1590,  562, 514,  562, 514,  562, 512,  562, 516,  564, 1586,  562, 512,  562, 1622,  528, 512,  560, 1592,  560, 1592,  560, 1590,  562, 1590,  562, 5182,  4426, 4392,  564, 1588,  562, 514,  562, 1590,  562, 1590,  560, 514,  562, 512,  562, 1590,  562, 514,  562, 514,  564, 1588,  560, 516,  562, 512,  560, 1590,  564, 1588,  564, 512,  562, 1590,  562, 1588,  562, 514,  562, 1588,  562, 1588,  564, 1586,  560, 1590,  562, 1590,  562, 1588,  564, 512,  562, 1590,  562, 514,  562, 514,  562, 514,  560, 516,  560, 514,  562, 512,  560, 516,  560, 1590,  564, 512,  560, 1590,  562, 514,  560, 518,  558, 514,  560, 516,  560, 1590,  562, 514,  560, 1588,  562, 514,  560, 1590,  560, 1590,  562, 1588,  564, 1588,  564};  // COOLIX B2BF50
uint16_t rawData24[199] = {4420, 4398,  540, 1614,  536, 538,  560, 1590,  540, 1610,  560, 514,  564, 514,  558, 1592,  562, 514,  560, 514,  562, 1590,  540, 536,  552, 522,  540, 1612,  540, 1612,  538, 538,  538, 1612,  538, 1612,  562, 512,  560, 1592,  540, 1610,  560, 1590,  542, 1610,  540, 1612,  540, 1610,  562, 512,  542, 1608,  560, 516,  560, 514,  562, 512,  564, 510,  562, 514,  562, 512,  540, 536,  560, 1590,  564, 512,  540, 536,  562, 514,  560, 514,  540, 536,  538, 534,  560, 1592,  538, 538,  560, 1592,  540, 1610,  540, 1620,  554, 1590,  560, 1590,  538, 1612,  562, 5182,  4424, 4392,  544, 1610,  564, 512,  540, 1610,  540, 1612,  538, 536,  562, 512,  560, 1590,  564, 514,  560, 514,  538, 1612,  560, 514,  562, 512,  540, 1612,  558, 1592,  538, 538,  540, 1610,  538, 1612,  562, 514,  562, 1590,  540, 1610,  562, 1590,  560, 1592,  540, 1612,  538, 1612,  560, 516,  560, 1590,  564, 512,  562, 512,  560, 516,  544, 532,  538, 536,  538, 538,  538, 536,  560, 1590,  542, 534,  540, 536,  540, 538,  540, 534,  562, 512,  558, 516,  560, 1590,  540, 536,  562, 1588,  548, 1604,  562, 1590,  540, 1612,  562, 1590,  538, 1612,  540};  // COOLIX B2BF40
uint16_t rawData25[199] = {4424, 4420,  542, 1588,  542, 536,  564, 1588,  538, 1612,  538, 536,  564, 512,  560, 1590,  540, 536,  538, 536,  562, 1588,  538, 538,  540, 534,  538, 1614,  560, 1592,  540, 536,  538, 1612,  538, 1612,  564, 512,  560, 1590,  560, 1592,  538, 1612,  540, 1612,  562, 1590,  562, 1590,  562, 514,  540, 1612,  560, 514,  560, 514,  562, 514,  560, 516,  560, 516,  538, 538,  558, 1592,  562, 1590,  562, 512,  562, 514,  538, 538,  538, 536,  562, 514,  564, 510,  540, 536,  560, 514,  560, 1612,  542, 1588,  564, 1588,  538, 1612,  560, 1592,  538, 1612,  562, 5184,  4424, 4396,  562, 1592,  564, 512,  560, 1592,  564, 1588,  562, 516,  538, 536,  540, 1612,  538, 538,  564, 510,  562, 1588,  540, 536,  560, 516,  538, 1614,  538, 1614,  540, 562,  512, 1612,  562, 1590,  562, 536,  538, 1592,  536, 1614,  560, 1592,  562, 1588,  542, 1610,  564, 1588,  562, 514,  562, 1588,  542, 536,  562, 514,  540, 538,  538, 536,  538, 536,  564, 512,  564, 1586,  562, 1590,  540, 536,  562, 512,  560, 514,  564, 512,  564, 512,  540, 558,  540, 512,  540, 536,  540, 1612,  562, 1588,  562, 1590,  562, 1590,  564, 1590,  538, 1612,  564};  // COOLIX B2BFC0
uint16_t rawData26[199] = {4400, 4394,  562, 1592,  562, 528,  550, 1588,  562, 1590,  558, 516,  562, 514,  560, 1590,  562, 514,  560, 514,  562, 1588,  562, 514,  562, 514,  538, 1612,  562, 1590,  560, 516,  560, 1592,  560, 1590,  562, 514,  560, 1590,  560, 1592,  538, 1614,  560, 1592,  560, 1592,  560, 1590,  560, 516,  562, 1588,  560, 514,  562, 514,  562, 514,  558, 516,  560, 514,  538, 536,  562, 1588,  564, 1588,  562, 514,  564, 1586,  562, 514,  562, 514,  536, 538,  558, 516,  560, 516,  538, 536,  560, 1590,  562, 512,  562, 1590,  538, 1614,  562, 1588,  560, 1592,  562, 5182,  4424, 4396,  564, 1588,  540, 538,  546, 1604,  562, 1588,  562, 516,  560, 514,  562, 1588,  562, 512,  560, 516,  562, 1590,  560, 516,  560, 514,  562, 1588,  560, 1592,  562, 514,  538, 1612,  560, 1590,  562, 514,  562, 1588,  562, 1590,  540, 1612,  560, 1590,  562, 1590,  562, 1590,  562, 514,  560, 1590,  562, 512,  562, 514,  562, 512,  538, 538,  560, 514,  564, 510,  562, 1588,  562, 1590,  562, 512,  562, 1590,  560, 514,  562, 516,  538, 566,  510, 538,  560, 514,  560, 516,  538, 1612,  560, 514,  562, 1590,  560, 1590,  562, 1590,  562, 1590,  562};  // COOLIX B2BFD0
uint16_t rawData27[199] = {4424, 4396,  562, 1590,  560, 516,  562, 1588,  562, 1590,  562, 514,  560, 516,  562, 1588,  562, 514,  562, 514,  562, 1588,  560, 514,  562, 512,  560, 1592,  562, 1590,  564, 512,  562, 1588,  562, 1590,  562, 514,  536, 1614,  558, 1590,  562, 1590,  562, 1590,  560, 1590,  560, 1590,  562, 514,  564, 1586,  566, 512,  536, 540,  536, 538,  560, 516,  562, 514,  536, 538,  562, 1588,  562, 514,  538, 538,  538, 1612,  564, 512,  562, 512,  562, 514,  558, 516,  560, 516,  560, 1590,  564, 1588,  562, 514,  538, 1612,  540, 1610,  562, 1590,  560, 1590,  564, 5184,  4424, 4396,  538, 1614,  562, 514,  562, 1590,  560, 1588,  562, 516,  560, 516,  560, 1590,  564, 512,  562, 514,  560, 1592,  560, 516,  560, 516,  562, 1588,  560, 1592,  538, 538,  558, 1592,  562, 1590,  564, 512,  560, 1592,  562, 1588,  560, 1592,  562, 1590,  562, 1590,  560, 1592,  562, 512,  564, 1588,  538, 538,  540, 536,  562, 514,  538, 536,  562, 516,  538, 536,  538, 1612,  564, 512,  562, 514,  560, 1590,  562, 514,  562, 512,  562, 514,  560, 516,  562, 514,  562, 1590,  560, 1592,  562, 516,  562, 1588,  550, 1602,  540, 1612,  538, 1612,  562};  // COOLIX B2BF90
uint16_t rawData28[199] = {4424, 4396,  562, 1590,  562, 514,  562, 1588,  538, 1614,  538, 536,  562, 514,  562, 1590,  562, 514,  558, 516,  560, 1590,  562, 514,  562, 514,  562, 1588,  564, 1588,  562, 514,  560, 1592,  562, 1590,  560, 516,  538, 1612,  562, 1588,  562, 1590,  560, 1590,  562, 1588,  560, 1592,  562, 512,  562, 1588,  562, 516,  560, 514,  562, 514,  562, 538,  536, 514,  562, 514,  560, 1592,  562, 512,  560, 516,  560, 514,  562, 512,  560, 516,  560, 514,  562, 514,  562, 514,  538, 1614,  560, 1590,  562, 1590,  564, 1586,  562, 1590,  538, 1614,  560, 1590,  562, 5184,  4422, 4396,  564, 1588,  564, 512,  560, 1590,  562, 1588,  562, 514,  560, 514,  562, 1588,  564, 512,  564, 512,  562, 1588,  562, 514,  560, 514,  564, 1588,  562, 1590,  560, 516,  536, 1614,  564, 1586,  564, 514,  536, 1614,  562, 1590,  562, 1588,  562, 1588,  562, 1590,  562, 1590,  560, 514,  562, 1590,  540, 536,  562, 514,  536, 538,  560, 516,  560, 516,  562, 512,  562, 1590,  562, 514,  566, 510,  560, 516,  560, 514,  562, 514,  560, 516,  562, 514,  538, 536,  564, 1588,  562, 1590,  562, 1590,  562, 1590,  562, 1590,  560, 1590,  560, 1592,  564};  // COOLIX B2BF80
uint16_t rawData29[199] = {4424, 4396,  564, 1588,  562, 514,  564, 1588,  540, 1612,  560, 516,  564, 512,  562, 1590,  560, 514,  562, 514,  562, 1588,  558, 518,  560, 514,  562, 1588,  560, 1590,  564, 512,  560, 1590,  538, 1614,  562, 512,  562, 1590,  538, 1614,  560, 1590,  562, 1588,  564, 1590,  558, 1592,  560, 516,  560, 1592,  560, 516,  538, 536,  562, 514,  536, 538,  562, 514,  536, 538,  560, 1590,  560, 516,  560, 1590,  562, 514,  562, 512,  562, 516,  562, 512,  540, 536,  562, 514,  538, 1612,  562, 512,  564, 1588,  562, 1588,  562, 1590,  562, 1590,  560, 1592,  564, 5184,  4422, 4396,  562, 1590,  562, 516,  562, 1588,  562, 1588,  562, 514,  560, 514,  562, 1588,  564, 512,  560, 516,  560, 1590,  562, 514,  562, 512,  560, 1590,  562, 1588,  564, 512,  560, 1592,  562, 1590,  560, 516,  560, 1592,  562, 1588,  560, 1616,  538, 1588,  540, 1612,  562, 1590,  560, 514,  560, 1590,  562, 514,  562, 514,  560, 514,  540, 536,  538, 536,  560, 516,  562, 1588,  560, 516,  540, 1610,  562, 514,  538, 564,  512, 536,  564, 512,  562, 514,  560, 514,  562, 1590,  560, 516,  562, 1588,  540, 1612,  560, 1590,  562, 1590,  560, 1592,  564};  // COOLIX B2BFA0
uint16_t rawData30[199] = {4422, 4398,  562, 1590,  564, 514,  562, 1590,  560, 1590,  560, 516,  564, 512,  562, 1590,  562, 514,  562, 514,  562, 1588,  538, 538,  560, 516,  562, 1588,  560, 1590,  562, 514,  560, 1592,  540, 1610,  562, 514,  560, 1592,  564, 1588,  538, 1612,  562, 1590,  562, 1590,  562, 1590,  562, 514,  562, 1590,  540, 536,  538, 536,  560, 516,  562, 514,  560, 514,  562, 512,  562, 1590,  562, 514,  562, 1588,  562, 1588,  562, 514,  560, 516,  560, 514,  562, 514,  562, 514,  538, 1614,  560, 514,  560, 516,  560, 1592,  562, 1588,  562, 1592,  562, 1588,  564, 5182,  4424, 4394,  564, 1590,  560, 514,  564, 1588,  540, 1610,  562, 512,  560, 516,  562, 1590,  562, 512,  564, 512,  560, 1590,  564, 512,  560, 514,  564, 1588,  564, 1588,  562, 514,  538, 1612,  538, 1612,  562, 514,  554, 1598,  560, 1590,  562, 1588,  562, 1590,  558, 1592,  562, 1588,  564, 512,  564, 1586,  562, 514,  562, 514,  560, 514,  562, 512,  562, 512,  562, 514,  564, 1586,  560, 516,  560, 1590,  562, 1588,  560, 516,  560, 514,  540, 536,  562, 512,  564, 512,  560, 1590,  562, 514,  562, 514,  560, 1592,  558, 1592,  540, 1612,  562, 1588,  562};  // COOLIX B2BFB0
uint16_t rawDataFan1[199] = {4398, 4422,  538, 1614,  536, 564,  538, 1616,  536, 1588,  564, 536,  536, 516,  538, 1612,  562, 540,  538, 510,  538, 1642,  536, 536,  510, 564,  514, 1612,  536, 1642,  534, 540,  512, 1614,  538, 1638,  512, 564,  512, 564,  508, 1618,  536, 1642,  536, 1612,  514, 1614,  562, 1588,  564, 538,  514, 1612,  534, 1642,  514, 538,  536, 566,  512, 536,  536, 542,  534, 564,  534, 1620,  508, 1642,  510, 542,  532, 538,  562, 538,  508, 568,  510, 564,  512, 564,  512, 564,  508, 566,  538, 1586,  540, 1610,  540, 1640,  534, 1592,  536, 1640,  512, 1614,  536, 5210,  4424, 4392,  540, 1642,  508, 564,  508, 1620,  558, 1590,  536, 540,  534, 566,  510, 1616,  536, 566,  508, 566,  512, 1638,  512, 538,  536, 540,  536, 1638,  510, 1618,  536, 564,  536, 1588,  536, 1642,  510, 540,  538, 562,  514, 1612,  538, 1638,  536, 1590,  536, 1640,  536, 1590,  538, 538,  536, 1616,  536, 1640,  512, 538,  538, 562,  512, 566,  510, 564,  510, 540,  534, 1642,  536, 1590,  538, 538,  534, 566,  512, 538,  538, 562,  512, 566,  510, 538,  538, 562,  510, 566,  510, 1614,  540, 1638,  514, 1614,  534, 1642,  510, 1640,  512, 1618,  534};  // COOLIX B29FC0
uint16_t rawDataFan2[199] = {4394, 4424,  514, 1636,  516, 560,  536, 1614,  514, 1638,  514, 562,  512, 538,  538, 1636,  514, 560,  514, 560,  516, 1636,  514, 562,  516, 556,  520, 1634,  516, 1610,  540, 560,  524, 1602,  540, 558,  516, 1634,  518, 560,  514, 1638,  514, 1638,  516, 1638,  512, 1638,  514, 1636,  518, 1636,  514, 560,  516, 1610,  540, 558,  516, 562,  514, 536,  540, 558,  518, 560,  516, 1636,  514, 1638,  514, 560,  516, 562,  514, 560,  514, 560,  516, 536,  538, 564,  514, 562,  534, 540,  512, 1636,  514, 1636,  516, 1636,  514, 1638,  516, 1638,  514, 1638,  512, 5230,  4398, 4422,  516, 1638,  534, 540,  514, 1636,  516, 1636,  514, 560,  516, 560,  514, 1638,  512, 564,  510, 560,  516, 1612,  540, 562,  536, 536,  518, 1636,  514, 1636,  514, 536,  540, 1638,  536, 538,  514, 1634,  516, 558,  540, 1610,  518, 1636,  518, 1636,  538, 1588,  538, 1638,  514, 1634,  516, 562,  514, 1612,  540, 560,  514, 560,  516, 558,  518, 536,  562, 538,  540, 1614,  512, 1636,  516, 558,  516, 562,  514, 558,  514, 562,  512, 564,  512, 564,  512, 562,  538, 538,  516, 1638,  512, 1634,  518, 1634,  516, 1638,  514, 1612,  540, 1640,  534};  // COOLIX B25FC0
uint16_t rawDataFan3[199] = {4392, 4426,  510, 1642,  532, 546,  508, 1640,  510, 1640,  512, 566,  508, 568,  508, 1642,  508, 568,  506, 564,  512, 1640,  512, 564,  488, 588,  510, 1642,  510, 1640,  512, 566,  506, 1642,  512, 568,  486, 586,  510, 1644,  532, 1616,  534, 1616,  510, 1642,  510, 1640,  510, 1640,  514, 1640,  510, 1640,  510, 564,  536, 540,  512, 566,  508, 564,  510, 566,  486, 590,  530, 1620,  534, 1616,  492, 588,  508, 570,  506, 568,  506, 566,  510, 566,  534, 540,  510, 564,  534, 544,  508, 1640,  534, 1620,  508, 1642,  510, 1642,  510, 1642,  510, 1640,  534, 5212,  4394, 4422,  512, 1644,  506, 566,  510, 1642,  510, 1640,  512, 564,  510, 564,  534, 1616,  510, 566,  510, 568,  532, 1618,  510, 564,  508, 568,  530, 1618,  510, 1642,  534, 542,  510, 1642,  532, 542,  488, 590,  508, 1644,  508, 1640,  510, 1640,  534, 1616,  510, 1642,  524, 1628,  532, 1620,  510, 1640,  510, 566,  512, 564,  508, 570,  508, 568,  528, 544,  508, 568,  510, 1642,  534, 1616,  512, 564,  532, 544,  510, 564,  510, 566,  534, 542,  510, 568,  508, 564,  512, 562,  512, 1640,  512, 1640,  536, 1616,  510, 1640,  510, 1642,  522, 1628,  512};  // COOLIX B23FC0
uint16_t rawDataFanAuto[199] = {4348, 4472,  486, 1668,  484, 588,  488, 1664,  488, 1664,  488, 590,  484, 592,  484, 1664,  488, 588,  488, 586,  490, 1660,  490, 590,  484, 588,  488, 1662,  488, 1660,  490, 586,  488, 1664,  486, 1662,  488, 586,  490, 1662,  488, 1662,  488, 1664,  488, 1662,  488, 1664,  486, 1662,  490, 586,  488, 1666,  486, 586,  490, 590,  484, 590,  486, 590,  486, 586,  488, 588,  488, 1662,  488, 1666,  484, 586,  490, 586,  486, 588,  488, 590,  488, 588,  484, 592,  486, 586,  488, 588,  488, 1662,  490, 1660,  490, 1664,  488, 1662,  490, 1662,  488, 1664,  484, 5262,  4344, 4472,  486, 1662,  488, 590,  488, 1666,  486, 1664,  488, 584,  488, 588,  486, 1668,  484, 588,  486, 590,  486, 1662,  488, 588,  488, 588,  488, 1664,  486, 1664,  508, 570,  486, 1660,  490, 1660,  488, 592,  486, 1662,  488, 1662,  490, 1662,  486, 1662,  488, 1664,  488, 1664,  486, 590,  488, 1662,  488, 586,  488, 590,  488, 586,  488, 588,  488, 588,  488, 584,  488, 1662,  490, 1666,  488, 586,  488, 590,  486, 590,  484, 590,  486, 586,  512, 564,  488, 588,  488, 588,  486, 1664,  488, 1660,  490, 1668,  482, 1666,  484, 1668,  486, 1662,  486};  // COOLIX B2BFC0

// BEGIN - implementation procedures

// setupWiFi

void setupWiFi()
{
    WiFi.config(ip,dns,gateway,subnet);
    WiFi.begin(ssid, password);
  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
}


BLYNK_WRITE(V1)
{
  int pinValue = param.asInt(); // assigning incoming value from pin V3 to a variable
  Serial.print("V1 value is: "); // to seral monitor
  Serial.println(pinValue);
  if (pinValue == 1) {
        //HIGH - ON
       Serial.println(F("Pin is HIGH")); // to seral monitor
       irsend.sendRaw(rawDataOn, 199, 38);  // Send a raw data capture at 38kHz. 
    }else {
       //LOW - OFF
      Serial.println(F("Pin is LOW"));  // to seral monitor
      irsend.sendRaw(rawDataOff, 199, 38);  // Send a raw data capture at 38kHz.    
    }
}

BLYNK_WRITE(V2)
{
  int pinValue = param.asInt(); // assigning incoming value from pin V3 to a variable
  Serial.print("V2 temp value is: "); // to seral monitor
  Serial.println(pinValue);
  if (pinValue == 21) {
        //HIGH - ON
       Serial.println(F("21")); // to seral monitor
       irsend.sendRaw(rawData21, 199, 38);  // Send a raw data capture at 38kHz. 
  }
  if (pinValue == 22) {
        //HIGH - ON
       Serial.println(F("22")); // to seral monitor
       irsend.sendRaw(rawData22, 199, 38);  // Send a raw data capture at 38kHz. 
  }
  if (pinValue == 23) {
        //HIGH - ON
       Serial.println(F("23")); // to seral monitor
       irsend.sendRaw(rawData23, 199, 38);  // Send a raw data capture at 38kHz. 
  }
  if (pinValue == 24) {
        //HIGH - ON
       Serial.println(F("24")); // to seral monitor
       irsend.sendRaw(rawData24, 199, 38);  // Send a raw data capture at 38kHz. 
  }
  if (pinValue == 25) {
        //HIGH - ON
       Serial.println(F("25")); // to seral monitor
       irsend.sendRaw(rawData25, 199, 38);  // Send a raw data capture at 38kHz. 
  }
  if (pinValue == 26) {
        //HIGH - ON
       Serial.println(F("26")); // to seral monitor
       irsend.sendRaw(rawData26, 199, 38);  // Send a raw data capture at 38kHz. 
  }
  if (pinValue == 27) {
        //HIGH - ON
       Serial.println(F("27")); // to seral monitor
       irsend.sendRaw(rawData27, 199, 38);  // Send a raw data capture at 38kHz. 
  }
  if (pinValue == 28) {
        //HIGH - ON
       Serial.println(F("28")); // to seral monitor
       irsend.sendRaw(rawData28, 199, 38);  // Send a raw data capture at 38kHz. 
  }
  if (pinValue == 29) {
        //HIGH - ON
       Serial.println(F("29")); // to seral monitor
       irsend.sendRaw(rawData29, 199, 38);  // Send a raw data capture at 38kHz. 
  }
  if (pinValue == 30) {
        //HIGH - ON
       Serial.println(F("30")); // to seral monitor
       irsend.sendRaw(rawData30, 199, 38);  // Send a raw data capture at 38kHz. 
  }    
}

BLYNK_WRITE(V3)
{
  int pinValue = param.asInt(); // assigning incoming value from pin V3 to a variable
  Serial.print("V3 FAN value is: "); // to seral monitor
  Serial.println(pinValue);
  if (pinValue == 100) {
        //HIGH - ON
       Serial.println(F("Auto")); // to seral monitor
       irsend.sendRaw(rawDataFanAuto, 199, 38);  // Send a raw data capture at 38kHz. 
  }
  if (pinValue == 101) {
        //HIGH - ON
       Serial.println(F("1")); // to seral monitor
       irsend.sendRaw(rawDataFan1, 199, 38);  // Send a raw data capture at 38kHz. 
  }
  if (pinValue == 102) {
        //HIGH - ON
       Serial.println(F("2")); // to seral monitor
       irsend.sendRaw(rawDataFan2, 199, 38);  // Send a raw data capture at 38kHz. 
  }
  if (pinValue == 103) {
        //HIGH - ON
       Serial.println(F("3")); // to seral monitor
       irsend.sendRaw(rawDataFan3, 199, 38);  // Send a raw data capture at 38kHz. 
  }
}



// END - implementation procedures

// INITIALIZE PROGRAM

void setup() {
  Blynk.begin(auth, ssid, password, server_ip, 8080); // My Local Server BLYNK
  setupWiFi();
  irsend.begin();
  Serial.begin(115200, SERIAL_8N1, SERIAL_TX_ONLY);
}


// START PROGRAM

void loop() {
Blynk.run();

}
